Title:
Using your GPU for general purpose: algorithms, techniques and a compute abstraction layer for Python (CoalPy).

Abstract:
In recent years there has been a raise in public interest of scalable data processing, machine learning and computer graphics. All of these problem spaces rely more and more on general purpose graphics processing unit (GPGPU). We will present a couple of algorithms designed specifically for the GPU (Sorting and Prefixing), discuss applications and performance, we will also show how to write your own algorithms using CoalPy (Compute Abstraction layer for Python).

Outline:

* Agenda
* About me
* Summary of Applications of GPGPU
* Performance Results:
    * GPU Radix Sort
    * GPU Prefix Count
* GPGPU Concepts:
    * Graphics APIs
        * Dx12, Vulkan
        * CUDA
        * CoalPy
    * Introduction to SIMD
    * Hierarchy of computation:
        * register
        * waves
        * local data share (LDS), ram.
    * Compute kernel dispatches
    * Compute kernel groups
    * Compute kernel threads
* Prefix sum introduction:
    * algorithm
    * applications
* GPU Prefix Sum:
    * prefix sum in wave
    * prefix sum in thread group
    * prefix sum in data
* Sorting in CPU
    * Counting sort
    * CPU Prefix Sum
    * Offsets
* Sorting in GPU
    * Count Scatter
    * Prefix batch table
    * Prefix global table
    * scatter output
* Tutorial for coalpy
* Q&A

